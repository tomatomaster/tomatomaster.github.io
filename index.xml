<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>post</title>
    <link>https://tomatomaster.github.io/</link>
    <description>Recent content on post</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sat, 18 Aug 2018 22:41:10 +0900</lastBuildDate>
    
	<atom:link href="https://tomatomaster.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C#[9]</title>
      <link>https://tomatomaster.github.io/posts/csharp9/</link>
      <pubDate>Sat, 18 Aug 2018 22:41:10 +0900</pubDate>
      
      <guid>https://tomatomaster.github.io/posts/csharp9/</guid>
      <description>C# unsafe CLR（共通言語ランタイム：Common Language Runtime）によって管理されないコードのことをunsafeと呼ぶ。 その一つがポインター。ポ</description>
    </item>
    
    <item>
      <title>C#[8]</title>
      <link>https://tomatomaster.github.io/posts/csharp8/</link>
      <pubDate>Fri, 17 Aug 2018 08:31:35 +0900</pubDate>
      
      <guid>https://tomatomaster.github.io/posts/csharp8/</guid>
      <description>C#メモ ジェネリクス コンストラクター制約 class Test&amp;lt;T&amp;gt; where T : new() { } 型パラメーターTに当てはめるクラスは引数なしコンストラクタを持つ必要がある。引数</description>
    </item>
    
    <item>
      <title>C#[7]</title>
      <link>https://tomatomaster.github.io/posts/csharp7/</link>
      <pubDate>Thu, 16 Aug 2018 10:04:45 +0900</pubDate>
      
      <guid>https://tomatomaster.github.io/posts/csharp7/</guid>
      <description>C#メモ デリゲート メソッド専用のインタフェースみたいなもの 戻り値と引数がデリゲート宣言と一致していれば、デリゲート変数に代入することができ</description>
    </item>
    
    <item>
      <title>C#[6]</title>
      <link>https://tomatomaster.github.io/posts/csharp6/</link>
      <pubDate>Tue, 14 Aug 2018 08:17:31 +0900</pubDate>
      
      <guid>https://tomatomaster.github.io/posts/csharp6/</guid>
      <description>C#メモ Vritual/abstract virtual virtual修飾子がつけられたメソッドは継承先で、override修飾子をつけることにより、オーバーラーイド可能 オーバーライド</description>
    </item>
    
    <item>
      <title>C#[5]</title>
      <link>https://tomatomaster.github.io/posts/csharp5/</link>
      <pubDate>Mon, 13 Aug 2018 08:25:24 +0900</pubDate>
      
      <guid>https://tomatomaster.github.io/posts/csharp5/</guid>
      <description>C#メモ 演算子のオーバーロード 書式 //単行演算子 public static MyClass oeprator - (MyClass a1){ //hogehoge } //2項演算子 public static MyClass oeprator + (MyClass a1, MyClass a2){ //hogehoge } 単行演算子のオペランドはその定義</description>
    </item>
    
    <item>
      <title>C#[4]</title>
      <link>https://tomatomaster.github.io/posts/csharp4/</link>
      <pubDate>Thu, 02 Aug 2018 23:49:02 +0900</pubDate>
      
      <guid>https://tomatomaster.github.io/posts/csharp4/</guid>
      <description>C#メモ ref/out C#のメソッドの引数で渡された値や参照は通常コピーされてメソッド内で使用される。そのため、メソッド内で引数に対して操作した内容はメ</description>
    </item>
    
    <item>
      <title>C#[3]</title>
      <link>https://tomatomaster.github.io/posts/csharp3/</link>
      <pubDate>Wed, 01 Aug 2018 22:56:21 +0900</pubDate>
      
      <guid>https://tomatomaster.github.io/posts/csharp3/</guid>
      <description>C#メモ アクセス修飾子 C#はアクセス修飾子をつけないとprivate指定になる。 メソッドの引数（オブジェクトの参照） C#はオブジェクトを参</description>
    </item>
    
    <item>
      <title>C#[2]</title>
      <link>https://tomatomaster.github.io/posts/csharp2/</link>
      <pubDate>Tue, 31 Jul 2018 23:38:50 +0900</pubDate>
      
      <guid>https://tomatomaster.github.io/posts/csharp2/</guid>
      <description>C#メモ String C#のString型に対する==は値の比較となる。 Javaの様に参照の比較ではない。 //内容は等しいが、異なるオブジェクトのSt</description>
    </item>
    
    <item>
      <title>C#[1]</title>
      <link>https://tomatomaster.github.io/posts/csharp/</link>
      <pubDate>Sun, 29 Jul 2018 21:46:49 +0900</pubDate>
      
      <guid>https://tomatomaster.github.io/posts/csharp/</guid>
      <description>C#メモ リテラル C#の整数リテラルはint uint long ulongの順に当てはめられる。 ## ショートサーキット評価 pが```true```ならばqは評</description>
    </item>
    
    <item>
      <title>Udacity 3</title>
      <link>https://tomatomaster.github.io/posts/udacity3/</link>
      <pubDate>Tue, 10 Jul 2018 22:45:44 +0900</pubDate>
      
      <guid>https://tomatomaster.github.io/posts/udacity3/</guid>
      <description>Udacity UdacityのIntro to Machine LearningのSVMを視聴。前のNavie Bayseの最終課題を解くためにpython3のセットアッ</description>
    </item>
    
    <item>
      <title>Udacity 2</title>
      <link>https://tomatomaster.github.io/posts/openjdk/</link>
      <pubDate>Tue, 26 Jun 2018 09:02:03 +0900</pubDate>
      
      <guid>https://tomatomaster.github.io/posts/openjdk/</guid>
      <description>Udacity UdacityのIntro to Machine Learningの続き進める。Naive Bayseの37まで終了。 ベイズを、「病気と診断されても、実際にその</description>
    </item>
    
    <item>
      <title>Udacity 1</title>
      <link>https://tomatomaster.github.io/posts/udacity/</link>
      <pubDate>Mon, 25 Jun 2018 22:56:23 +0900</pubDate>
      
      <guid>https://tomatomaster.github.io/posts/udacity/</guid>
      <description>UdacityのIntro to Machine Learningを初めてみた。 講義はYoutubeビデオで行われるので、1.5倍速〜2倍速にして視聴。 今日はN</description>
    </item>
    
    <item>
      <title>ブログはじめました</title>
      <link>https://tomatomaster.github.io/posts/%E3%83%96%E3%83%AD%E3%82%B0%E3%81%AF%E3%81%98%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F/</link>
      <pubDate>Sun, 17 Jun 2018 20:41:41 +0900</pubDate>
      
      <guid>https://tomatomaster.github.io/posts/%E3%83%96%E3%83%AD%E3%82%B0%E3%81%AF%E3%81%98%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F/</guid>
      <description>タイトル すぐに飽きてやめちゃうかもしれないけど&amp;hellip;</description>
    </item>
    
  </channel>
</rss>